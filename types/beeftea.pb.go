// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.3
// source: beeftea.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Kv *KeyValue `protobuf:"bytes,2,opt,name=kv,proto3" json:"kv,omitempty"`
}

func (x *PutReq) Reset() {
	*x = PutReq{}
	mi := &file_beeftea_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutReq) ProtoMessage() {}

func (x *PutReq) ProtoReflect() protoreflect.Message {
	mi := &file_beeftea_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutReq.ProtoReflect.Descriptor instead.
func (*PutReq) Descriptor() ([]byte, []int) {
	return file_beeftea_proto_rawDescGZIP(), []int{0}
}

func (x *PutReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutReq) GetKv() *KeyValue {
	if x != nil {
		return x.Kv
	}
	return nil
}

type PutRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PutRes) Reset() {
	*x = PutRes{}
	mi := &file_beeftea_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRes) ProtoMessage() {}

func (x *PutRes) ProtoReflect() protoreflect.Message {
	mi := &file_beeftea_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRes.ProtoReflect.Descriptor instead.
func (*PutRes) Descriptor() ([]byte, []int) {
	return file_beeftea_proto_rawDescGZIP(), []int{1}
}

func (x *PutRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetReq) Reset() {
	*x = GetReq{}
	mi := &file_beeftea_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReq) ProtoMessage() {}

func (x *GetReq) ProtoReflect() protoreflect.Message {
	mi := &file_beeftea_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReq.ProtoReflect.Descriptor instead.
func (*GetReq) Descriptor() ([]byte, []int) {
	return file_beeftea_proto_rawDescGZIP(), []int{2}
}

func (x *GetReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kv *KeyValue `protobuf:"bytes,1,opt,name=kv,proto3" json:"kv,omitempty"`
}

func (x *GetRes) Reset() {
	*x = GetRes{}
	mi := &file_beeftea_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRes) ProtoMessage() {}

func (x *GetRes) ProtoReflect() protoreflect.Message {
	mi := &file_beeftea_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRes.ProtoReflect.Descriptor instead.
func (*GetRes) Descriptor() ([]byte, []int) {
	return file_beeftea_proto_rawDescGZIP(), []int{3}
}

func (x *GetRes) GetKv() *KeyValue {
	if x != nil {
		return x.Kv
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_beeftea_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_beeftea_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_beeftea_proto_rawDescGZIP(), []int{4}
}

type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs      *Messages `protobuf:"bytes,1,opt,name=msgs,proto3" json:"msgs,omitempty"`
	NodeIndex uint32    `protobuf:"varint,2,opt,name=node_index,json=nodeIndex,proto3" json:"node_index,omitempty"`
	Sig       []byte    `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_beeftea_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_beeftea_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_beeftea_proto_rawDescGZIP(), []int{5}
}

func (x *Envelope) GetMsgs() *Messages {
	if x != nil {
		return x.Msgs
	}
	return nil
}

func (x *Envelope) GetNodeIndex() uint32 {
	if x != nil {
		return x.NodeIndex
	}
	return 0
}

func (x *Envelope) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

type Messages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs []*Message `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *Messages) Reset() {
	*x = Messages{}
	mi := &file_beeftea_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Messages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Messages) ProtoMessage() {}

func (x *Messages) ProtoReflect() protoreflect.Message {
	mi := &file_beeftea_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Messages.ProtoReflect.Descriptor instead.
func (*Messages) Descriptor() ([]byte, []int) {
	return file_beeftea_proto_rawDescGZIP(), []int{6}
}

func (x *Messages) GetMsgs() []*Message {
	if x != nil {
		return x.Msgs
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*Message_Proposal
	//	*Message_Prepare
	//	*Message_Commit
	Type isMessage_Type `protobuf_oneof:"type"`
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_beeftea_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_beeftea_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_beeftea_proto_rawDescGZIP(), []int{7}
}

func (m *Message) GetType() isMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Message) GetProposal() *Proposal {
	if x, ok := x.GetType().(*Message_Proposal); ok {
		return x.Proposal
	}
	return nil
}

func (x *Message) GetPrepare() *Prepare {
	if x, ok := x.GetType().(*Message_Prepare); ok {
		return x.Prepare
	}
	return nil
}

func (x *Message) GetCommit() *Commit {
	if x, ok := x.GetType().(*Message_Commit); ok {
		return x.Commit
	}
	return nil
}

type isMessage_Type interface {
	isMessage_Type()
}

type Message_Proposal struct {
	Proposal *Proposal `protobuf:"bytes,1,opt,name=proposal,proto3,oneof"`
}

type Message_Prepare struct {
	Prepare *Prepare `protobuf:"bytes,2,opt,name=prepare,proto3,oneof"`
}

type Message_Commit struct {
	Commit *Commit `protobuf:"bytes,3,opt,name=commit,proto3,oneof"`
}

func (*Message_Proposal) isMessage_Type() {}

func (*Message_Prepare) isMessage_Type() {}

func (*Message_Commit) isMessage_Type() {}

type Proposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reqs          []*PutReq `protobuf:"bytes,1,rep,name=reqs,proto3" json:"reqs,omitempty"`
	ProposerProof []byte    `protobuf:"bytes,2,opt,name=proposer_proof,json=proposerProof,proto3" json:"proposer_proof,omitempty"`
	ProposerIndex uint32    `protobuf:"varint,3,opt,name=proposer_index,json=proposerIndex,proto3" json:"proposer_index,omitempty"`
}

func (x *Proposal) Reset() {
	*x = Proposal{}
	mi := &file_beeftea_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Proposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proposal) ProtoMessage() {}

func (x *Proposal) ProtoReflect() protoreflect.Message {
	mi := &file_beeftea_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proposal.ProtoReflect.Descriptor instead.
func (*Proposal) Descriptor() ([]byte, []int) {
	return file_beeftea_proto_rawDescGZIP(), []int{8}
}

func (x *Proposal) GetReqs() []*PutReq {
	if x != nil {
		return x.Reqs
	}
	return nil
}

func (x *Proposal) GetProposerProof() []byte {
	if x != nil {
		return x.ProposerProof
	}
	return nil
}

func (x *Proposal) GetProposerIndex() uint32 {
	if x != nil {
		return x.ProposerIndex
	}
	return 0
}

type Prepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the digest of the Message the proposal is in
	// aka the digest over which Envelope.sig is signed
	ProposalDigest []byte `protobuf:"bytes,1,opt,name=proposal_digest,json=proposalDigest,proto3" json:"proposal_digest,omitempty"`
}

func (x *Prepare) Reset() {
	*x = Prepare{}
	mi := &file_beeftea_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Prepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prepare) ProtoMessage() {}

func (x *Prepare) ProtoReflect() protoreflect.Message {
	mi := &file_beeftea_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prepare.ProtoReflect.Descriptor instead.
func (*Prepare) Descriptor() ([]byte, []int) {
	return file_beeftea_proto_rawDescGZIP(), []int{9}
}

func (x *Prepare) GetProposalDigest() []byte {
	if x != nil {
		return x.ProposalDigest
	}
	return nil
}

type Commit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalDigest []byte `protobuf:"bytes,1,opt,name=proposal_digest,json=proposalDigest,proto3" json:"proposal_digest,omitempty"`
}

func (x *Commit) Reset() {
	*x = Commit{}
	mi := &file_beeftea_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_beeftea_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_beeftea_proto_rawDescGZIP(), []int{10}
}

func (x *Commit) GetProposalDigest() []byte {
	if x != nil {
		return x.ProposalDigest
	}
	return nil
}

type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	mi := &file_beeftea_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_beeftea_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_beeftea_proto_rawDescGZIP(), []int{11}
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValue) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

var File_beeftea_proto protoreflect.FileDescriptor

var file_beeftea_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x62, 0x65, 0x65, 0x66, 0x74, 0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x62, 0x65, 0x65, 0x66, 0x74, 0x65, 0x61, 0x22, 0x3b, 0x0a, 0x06, 0x50, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x02, 0x6b, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x62, 0x65, 0x65, 0x66, 0x74, 0x65, 0x61, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x02, 0x6b, 0x76, 0x22, 0x18, 0x0a, 0x06, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x1a, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x2b, 0x0a, 0x06, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x02, 0x6b, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x62, 0x65, 0x65, 0x66, 0x74, 0x65, 0x61, 0x2e, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x6b, 0x76, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x62, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x25, 0x0a,
	0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x65,
	0x65, 0x66, 0x74, 0x65, 0x61, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x04,
	0x6d, 0x73, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x73, 0x69, 0x67, 0x22, 0x30, 0x0a, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x62, 0x65, 0x65, 0x66, 0x74, 0x65, 0x61, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x65, 0x65, 0x66, 0x74, 0x65, 0x61, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x65, 0x65, 0x66, 0x74, 0x65, 0x61, 0x2e,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x65, 0x65, 0x66, 0x74, 0x65, 0x61, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x42, 0x06, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7d, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x65, 0x71, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x62, 0x65, 0x65, 0x66, 0x74, 0x65, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x52, 0x04, 0x72, 0x65, 0x71, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x32, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x08, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x32, 0x5f, 0x0a, 0x0b, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x12, 0x27, 0x0a, 0x03, 0x50, 0x75,
	0x74, 0x12, 0x0f, 0x2e, 0x62, 0x65, 0x65, 0x66, 0x74, 0x65, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x65, 0x65, 0x66, 0x74, 0x65, 0x61, 0x2e, 0x50, 0x75, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0f, 0x2e, 0x62, 0x65, 0x65,
	0x66, 0x74, 0x65, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x65,
	0x65, 0x66, 0x74, 0x65, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x32, 0x39, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x52, 0x50, 0x43, 0x12, 0x29, 0x0a, 0x04,
	0x53, 0x65, 0x6e, 0x64, 0x12, 0x11, 0x2e, 0x62, 0x65, 0x65, 0x66, 0x74, 0x65, 0x61, 0x2e, 0x45,
	0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x1a, 0x0e, 0x2e, 0x62, 0x65, 0x65, 0x66, 0x74, 0x65,
	0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_beeftea_proto_rawDescOnce sync.Once
	file_beeftea_proto_rawDescData = file_beeftea_proto_rawDesc
)

func file_beeftea_proto_rawDescGZIP() []byte {
	file_beeftea_proto_rawDescOnce.Do(func() {
		file_beeftea_proto_rawDescData = protoimpl.X.CompressGZIP(file_beeftea_proto_rawDescData)
	})
	return file_beeftea_proto_rawDescData
}

var file_beeftea_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_beeftea_proto_goTypes = []any{
	(*PutReq)(nil),   // 0: beeftea.PutReq
	(*PutRes)(nil),   // 1: beeftea.PutRes
	(*GetReq)(nil),   // 2: beeftea.GetReq
	(*GetRes)(nil),   // 3: beeftea.GetRes
	(*Empty)(nil),    // 4: beeftea.Empty
	(*Envelope)(nil), // 5: beeftea.Envelope
	(*Messages)(nil), // 6: beeftea.Messages
	(*Message)(nil),  // 7: beeftea.Message
	(*Proposal)(nil), // 8: beeftea.Proposal
	(*Prepare)(nil),  // 9: beeftea.Prepare
	(*Commit)(nil),   // 10: beeftea.Commit
	(*KeyValue)(nil), // 11: beeftea.KeyValue
}
var file_beeftea_proto_depIdxs = []int32{
	11, // 0: beeftea.PutReq.kv:type_name -> beeftea.KeyValue
	11, // 1: beeftea.GetRes.kv:type_name -> beeftea.KeyValue
	6,  // 2: beeftea.Envelope.msgs:type_name -> beeftea.Messages
	7,  // 3: beeftea.Messages.msgs:type_name -> beeftea.Message
	8,  // 4: beeftea.Message.proposal:type_name -> beeftea.Proposal
	9,  // 5: beeftea.Message.prepare:type_name -> beeftea.Prepare
	10, // 6: beeftea.Message.commit:type_name -> beeftea.Commit
	0,  // 7: beeftea.Proposal.reqs:type_name -> beeftea.PutReq
	0,  // 8: beeftea.ExternalRPC.Put:input_type -> beeftea.PutReq
	2,  // 9: beeftea.ExternalRPC.Get:input_type -> beeftea.GetReq
	5,  // 10: beeftea.ConsensusRPC.Send:input_type -> beeftea.Envelope
	1,  // 11: beeftea.ExternalRPC.Put:output_type -> beeftea.PutRes
	3,  // 12: beeftea.ExternalRPC.Get:output_type -> beeftea.GetRes
	4,  // 13: beeftea.ConsensusRPC.Send:output_type -> beeftea.Empty
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_beeftea_proto_init() }
func file_beeftea_proto_init() {
	if File_beeftea_proto != nil {
		return
	}
	file_beeftea_proto_msgTypes[7].OneofWrappers = []any{
		(*Message_Proposal)(nil),
		(*Message_Prepare)(nil),
		(*Message_Commit)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_beeftea_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_beeftea_proto_goTypes,
		DependencyIndexes: file_beeftea_proto_depIdxs,
		MessageInfos:      file_beeftea_proto_msgTypes,
	}.Build()
	File_beeftea_proto = out.File
	file_beeftea_proto_rawDesc = nil
	file_beeftea_proto_goTypes = nil
	file_beeftea_proto_depIdxs = nil
}
